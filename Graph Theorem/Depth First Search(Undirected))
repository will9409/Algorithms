#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

vector<int> edge[10001];
bool visit[10001];

void dfs(int v)
{
    if(visit[v] == true){
        return ;
    }
    
    printf("%d ",v);
    visit[v] = true;
    for(int i = 0; i < edge[v].size(); i++){
        dfs(edge[v][i]);
    }
}

void initVisit()
{
    for(int i = 0; i < 10001; i++)
        visit[i] = false;
}

void main()
{
    int n, m, s;
    scanf("%d %d %d", &n, &m, &s);
    for(int i = 0; i < m; i++){
        scanf("%d %d", &u, &v);
        edge[u].push_back(v);
        edge[v].push_back(u);
    }
    for(int i = 0; i <= n; i++)
        sort(edge[i].begin(), edge[i].end());
        
        
    initVisit();
    for(int i = 1; i <= n; i++){
        if(visit[i] == false)
            dfs(i);
    }
        
}
